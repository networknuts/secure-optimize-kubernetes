ISTIOCTL DEMO PROFILE

=================

1. Install Istio

curl -L https://istio.io/downloadIstio | sh -
cd istio-1.22.3
export PATH=$PWD/bin:$PATH
istioctl profile list
istioctl install --set profile=demo
kubectl get crd gateways.gateway.networking.k8s.io &> /dev/null || { kubectl kustomize "github.com/kubernetes-sigs/gateway-api/config/crd?ref=v1.1.0" | kubectl apply -f -; }

2. Mark default namespace for istio-injection

kubectl label namespace default istio-injection=enabled

3. Deploy the sample application

kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.22/samples/bookinfo/platform/kube/bookinfo.yaml

4. Check application is working - [your rating-v1 pod name will be different]

kubectl exec ratings-v1-7c4bbf97db-nqtzn -c ratings -- curl -sS productpage:9080/productpage | grep -o "<title>.*</title>"

5. Create a Kubernetes Gateway. Expose application for outside world

kubectl apply -f samples/bookinfo/gateway-api/bookinfo-gateway.yaml

6. Check the service, it will be of type LoadBalancer. Change it to ClusterIP

kubectl annotate gateway bookinfo-gateway networking.istio.io/service-type=ClusterIP --namespace=default

kubectl get gateway

7. Access application using port-forwarding - do it from new tab

kubectl port-forward svc/bookinfo-gateway-istio 8080:80

Open browser of your workstation and access - http://localhost:8080/productpage


8. Now install prometheus/grafana/kiali and other addons

kubectl apply -f samples/addons
kubectl rollout status deployment/kiali -n istio-system


9. Access Kiali to observe traffic. From workstation console

export PATH=$PWD/bin:$PATH
istioctl dashboard kiali


10. Request Routing - ALL TRAFFIC to v1

Create a file - vim gatewayapi-route-all-v1.yaml

---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: reviews
spec:
  parentRefs:
  - group: ""
    kind: Service
    name: reviews
    port: 9080
  rules:
  - backendRefs:
    - name: reviews-v1
      port: 9080

## FILE END HERE

kubectl apply -f gatewayapi-route-all-v1.yaml

kubectl describe httproutes.gateway.networking.k8s.io

11. Check AGAIN - all traffic will be going to v1 

Open browser in workstation and access - http://localhost:8080/productpage

<refresh it couple of time>

Also check - kiali dashboard to confirm


11. Request Routing - User ALOK's traffic to v2, rest all to v1

Create another file - vim gatewayapi-user-specific.yaml

---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: reviews
spec:
  parentRefs:
  - group: ""
    kind: Service
    name: reviews
    port: 9080
  rules:
  - matches:
    - headers:
      - name: end-user
        value: jason
    backendRefs:
    - name: reviews-v2
      port: 9080
  - backendRefs:
    - name: reviews-v1
      port: 9080

## FILE END HERE






